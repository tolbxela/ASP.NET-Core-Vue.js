@page
@model IndexModel
@{
    ViewData["Title"] = "ASP.NET Core + Vue.Js";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<div id="app">

    <center><h3>The Vue 3 Card Component (Razor Partial File: <i>_Card.cshtml</i>)</h3></center>

    <div class="card-deck pt-4">
        @for (var num = 1; num <= 4; num++)
        {
            var Card = $"Card_{num}";
            <vue-card id="@Card" name="@Card" img="/img/Vue3.png" class="mb-4">
                <h6>Card @num</h6>
            </vue-card>
        }
    </div>

    <center><h3>The Vue 3 Card Single File Component (SFC: <i>vue-card2.vue</i>)</h3></center>

    <div id="app" class="card-deck pt-4">
        @for (var num = 1; num <= 4; num++)
        {
            var Card = $"Card_{num}";
            <vue-card2 id="@Card" name="@Card" img="/img/Vue3.png" class="mb-4">
                <h6>Card @num</h6>
            </vue-card2>
        }
    </div>
</div>

@section Scripts {

    <partial name="_Card" />

    <script type="text/javascript">

        // Options from the vue3-sfc-loader Example at https://github.com/FranckFreiburger/vue3-sfc-loader#example

        const options = {
            moduleCache: {
                vue: Vue
            },
            async getFile(url) {

                const res = await fetch(url);
                if (!res.ok)
                    throw Object.assign(new Error(res.statusText + ' ' + url), { res });
                return {
                    getContentData: asBinary => asBinary ? res.arrayBuffer() : res.text(),
                }
            },
            addStyle(textContent) {

                const style = Object.assign(document.createElement('style'), { textContent });
                const ref = document.head.getElementsByTagName('style')[0] || null;
                document.head.insertBefore(style, ref);
            },
        }

        const { loadModule } = window['vue3-sfc-loader'];

        const app = createApp({
            components: {
                'vue-card': vue_card, // Vue Component from Razor Partial
                'vue-card2': Vue.defineAsyncComponent(() => loadModule('./js/vue-card2.vue', options)) // Vue SFC
            }
        });

        app.mount('#app');
    </script>
}